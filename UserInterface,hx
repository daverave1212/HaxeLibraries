
package scripts;

import com.stencyl.graphics.G;
import com.stencyl.graphics.BitmapWrapper;

import com.stencyl.behavior.Script;
import com.stencyl.behavior.Script.*;
import com.stencyl.behavior.ActorScript;
import com.stencyl.behavior.SceneScript;
import com.stencyl.behavior.TimedTask;

import com.stencyl.models.Actor;
import com.stencyl.models.GameModel;
import com.stencyl.models.actor.Animation;
import com.stencyl.models.actor.ActorType;
import com.stencyl.models.actor.Collision;
import com.stencyl.models.actor.Group;
import com.stencyl.models.Scene;
import com.stencyl.models.Sound;
import com.stencyl.models.Region;
import com.stencyl.models.Font;
import com.stencyl.models.Joystick;

import com.stencyl.Engine;
import com.stencyl.Input;
import com.stencyl.Key;
import com.stencyl.utils.Utils;

import openfl.ui.Mouse;
import openfl.display.Graphics;
import openfl.display.BlendMode;
import openfl.display.BitmapData;
import openfl.display.Bitmap;
import openfl.events.Event;
import openfl.events.KeyboardEvent;
import openfl.events.TouchEvent;
import openfl.net.URLLoader;

import box2D.common.math.B2Vec2;
import box2D.dynamics.B2Body;
import box2D.dynamics.B2Fixture;
import box2D.dynamics.joints.B2Joint;

import motion.Actuate;
import motion.easing.Back;
import motion.easing.Cubic;
import motion.easing.Elastic;
import motion.easing.Expo;
import motion.easing.Linear;
import motion.easing.Quad;
import motion.easing.Quart;
import motion.easing.Quint;
import motion.easing.Sine;

using scripts.Other;

// A wrapper for ImageX which can hold some data, like speed and age
// Required for sliding images
class ImageXExtended{
	public var image  : ImageX;
	public var xSpeed : Float = 0;
	public var ySpeed : Float = 0;
	public var age	  : Int = 0;		// In miliseconds
	public var maxAge : Int = 0;		// In miliseconds
	
	public function new(img : ImageX){
		image = img;
	}
	
}

// A static class for buttons and all that
class UserInterface extends SceneScript
{
	
	// Constructor only exists so I can add event listeners to buttons created below
	public function new(){super();}
	public static var ui : UserInterface;
	public static var imagesBeingSlid : Array<ImageXExtended>;
	
	public static inline var Slide_Frequency = 20;
	
	// This must be done once per scene.
	public static function start(){
		ui = new UserInterface();
		imagesBeingSlid		  = new Array<ImageXExtended>();
		runPeriodically(Slide_Frequency, function(timeTask:TimedTask):Void{
			moveImages();
		}, null);
	}
	
	private static function moveImages(){
		for(i in 0...imagesBeingSlid.length){
			var img = imagesBeingSlid[i];
			if(img == null) continue;
			img.image.addX(img.xSpeed);
			img.image.addY(img.ySpeed);
			img.age += Slide_Frequency;
			if(img.age >= img.maxAge){
				imagesBeingSlid[i] = null;
			}
		}
	}
	
	public static function slideImage(image : ImageX, destinationX : Float, destinationY : Float, overTime : Int){
		var deltaX = destinationX - image.getX();
		var deltaY = destinationY - image.getY();
		var nTicks = overTime/Slide_Frequency;
		var img = new ImageXExtended(image);
		img.xSpeed = deltaX/nTicks;
		img.ySpeed = deltaY/nTicks;
		img.maxAge = overTime;
		var pos = imagesBeingSlid.getFirstNull();
		if(pos == -1){
			imagesBeingSlid.push(img);
		} else {
			imagesBeingSlid[pos] = img;
		}
	}
	
	
	
	
	
	
}
















